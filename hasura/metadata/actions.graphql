type Query {
  action_account_balance(
    address: String!
    height: Int
  ): ActionBalance
}

type Query {
  action_delegation(
    address: String!
    height: Int
    offset: Int
    limit: Int
    count_total: Boolean
  ): ActionDelegationResponse
}

type Query {
  action_delegation_reward(
    address: String!
    height: Int
  ): [ActionDelegationReward]
}

type Query {
  action_delegation_total(
    address: String!
    height: Int
  ): ActionBalance
}

type Query {
  action_delegator_withdraw_address(
    address: String!
  ): ActionAddress!
}

type Query {
  action_messages(
    address: String!
    executedAtStart: String!
    executedAtEnd: String!
    offset: Int
    limit: Int
  ): [ActionMessages]
}

type Query {
  action_messages_count(
    address: String!
    executedAtStart: String!
    executedAtEnd: String!
    offset: Int
    limit: Int
  ): ActionMessagePaging!
}

type Query {
  action_redelegation(
    address: String!
    height: Int
    offset: Int
    limit: Int
    count_total: Boolean
  ): ActionRedelegationResponse
}

type Query {
  action_unbonding_delegation(
    address: String!
    height: Int
    offset: Int
    limit: Int
    count_total: Boolean
  ): ActionUnbondingDelegationResponse
}

type Query {
  action_unbonding_delegation_total(
    address: String!
    height: Int
  ): ActionBalance
}

type Query {
  action_validator_commission_amount(
    address: String!
  ): ActionValidatorCommissionAmount
}

type Query {
  action_validator_delegations(
    address: String!
    offset: Int
    limit: Int
    count_total: Boolean
  ): ActionDelegationResponse
}

type Query {
  action_validator_redelegations_from(
    address: String!
    height: Int
    offset: Int
    limit: Int
    count_total: Boolean
  ): ActionRedelegationResponse
}

type Query {
  action_validator_unbonding_delegations(
    address: String!
    offset: Int
    limit: Int
    count_total: Boolean
  ): ActionUnbondingDelegationResponse
}

type ActionBalance {
  coins: [ActionCoin]
}

type ActionDelegationReward {
  coins: [ActionCoin]
  validator_address: String!
}

type ActionAddress {
  address: String!
}

type ActionDelegationResponse {
  delegations: [ActionDelegation]
  pagination: ActionPagination
}

type ActionRedelegationResponse {
  redelegations: [ActionRedelegation]
  pagination: ActionPagination
}

type ActionUnbondingDelegationResponse {
  unbonding_delegations: [ActionUnbondingDelegation]
  pagination: ActionPagination
}

type ActionValidatorCommissionAmount {
  coins: [ActionCoin]
}

type ActionMessages {
  height: bigint!
  index: bigint!
  involved_accounts_addresses: [String!]
  transaction_hash: String!
  type: String!
  value: jsonb
  funds: [ActionCoin]
}

type ActionMessagePaging {
  offset: Int
  limit: Int
  total_count: Int
}

scalar ActionCoin

scalar ActionDelegation

scalar ActionEntry

scalar ActionPagination

scalar ActionRedelegation

scalar ActionUnbondingDelegation

